@model IEnumerable<SCA.Models.MantenimientoVehiculo>

@{
    ViewBag.Title = "Index";
    Layout = "~/Views/Shared/_Layout.cshtml";
}
@Html.Raw(TempData["msg"])
<h2>Mantenimiento de vehiculos</h2>

<p>
    @Html.ActionLink("Agregar Nuevo", "Create")
</p>
<div class="row">
    <form method="get" class="col-3">
        <div class="form-group">
            <label class="control-label col-md-10">Placa:</label>
            <div class="col-md-10">
                <input type="number" name="Placa" value="@Request.QueryString["Placa"]" required />
            </div>
        </div>
        <br />
        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Buscar" class="btn btn-outline-secondary" />
            </div>
        </div>
    </form>
    <form class="col-3">
        <div class="form-group">
            <label class="control-label col-md-5">Marca:</label>
            <div class="col-md-10">
                <input type="text" name="Marca" value="@Request.QueryString["Marca"]" required />
            </div>
        </div>
        <br />
        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Buscar" class="btn btn-outline-secondary" />
            </div>
        </div>
    </form>
    <form method="get" class="col-3">
        <div class="form-group">
            <label class="control-label col-md-10">Departamento:</label>
            <div class="col-md-10">
                @Html.DropDownList("IdDepartamento", (List<SelectListItem>)ViewBag.IdDepartamento, htmlAttributes: new { @class = "form-control", @required = "required" })
            </div>
        </div>
        <br />
        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Buscar" class="btn btn-outline-secondary" />
            </div>
        </div>
    </form>
    <form method="get" class="col-3">
        <div class="form-group">
            <label class="control-label col-md-10">Tipo de mantenimiento:</label>
            <div class="col-md-10">
                <select name="Tipo" class="form-control">
                    <option value="0">Preventivo</option>
                    <option value="1">Correctivo</option>
                </select>
            </div>
        </div>
        <br />
        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Buscar" class="btn btn-outline-secondary" />
            </div>
        </div>
    </form>
    <form method="get" class="col-8">
        <div class="form-group">
            <div class="col-md-10 row">
                <div class="col-4">
                    <label class="control-label col-md-10">Fecha inicial:</label>
                    <input type="date" name="FechaIni" value="@Request.QueryString["FechaIni"]" required />
                </div>
                <div class="col-4">
                    <label class="control-label col-md-10">Fecha Final:</label>
                    <input type="date" name="FechaFin" value="@Request.QueryString["FechaFin"]" required />
                </div>
            </div>
        </div>
        <br />
        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Buscar" class="btn btn-outline-secondary" />
            </div>
        </div>
    </form>
    <br />
    <form class="">
        <br />
        <button class="btn btn-outline-secondary" type="submit">Limpiar</button>
    </form>
</div>
<table class="table table-bordered table-responsive" id="Tabla">
    <thead>
        <tr>
            <th>
                @Html.DisplayNameFor(model => model.IdMantenimientoVehiculo)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Flotilla.Placa)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.TipoMantenimiento)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.KilometrajeActual)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.ProximoKilometraje)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.CostoMantenimiento)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.FechaMantenimiento)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.DescripcionServicio)
            </th>
            <th>Acciones</th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model)
        {
            <tr>
                <td>
                    @Html.DisplayFor(modelItem => item.IdMantenimientoVehiculo)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Flotilla.Placa)
                </td>
                <td>
                    @if (item.TipoMantenimiento > 0)
                    {
                        @Html.Raw("Correctivo");
                    }
                    else
                    {
                        @Html.Raw("Preventivo");
                    }
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.KilometrajeActual)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.ProximoKilometraje)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.CostoMantenimiento)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.FechaMantenimiento)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.DescripcionServicio)
                </td>
                <td>
                    @Html.ActionLink("Editar", "Edit", new { id = item.IdFlotilla }) |
                    @Html.ActionLink("Detalles", "Details", new { id = item.IdFlotilla }) |
                    @Html.ActionLink("Borrar", "Delete", new { id = item.IdFlotilla })
                </td>
            </tr>
        }
    </tbody>
</table>
@section scripts{
    <script>
    var Usuario = '@Session["Usuario"].ToString()';//agarra el valor del usuario logueado
    var f = new Date();
    var d = f.getDate() + "/" + f.getMonth() + "/" + f.getFullYear() + "   " + " hora: " + f.getHours() + ":" + f.getMinutes();
        $(document).ready(function () {
            $('#Tabla').DataTable({
                "searching": true,
                "lengthChange": false,
                dom: 'Bfrtip',
                "scrollX": true,
                "scrollY": true,
                language: {
                    sLengthMenu: "_MENU_",
                    decimal: "",
                    emptyTable: "No hay información",
                    info: "Mostrando _START_ a _END_ de _TOTAL_",
                    infoEmpty: "Mostrando 0 de 0",
                    infoPostFix: "",
                    search: "Buscar",
                    thousands: ",",
                    loadingRecords: "Cargando...",
                    processing: "<div class='lds-dual-ring'></div>",
                    zeroRecords: "No se encontraron resultados",
                    paginate: {
                        "first": "Primero",
                        "last": "Último",
                        "next": "Siguiente",
                        "previous": "Anterior"
                    },
                }, buttons: [
                    {
                        extend: 'pdf',
                        orientation: 'landscape',
                        text: '<button class="btn btn-outline-secondary"> Exportar a PDF</button>',
                        filename: 'Reporte de mantenimiento de vehiculos',
                        title: "D'geo \n Reporte de mantenimiento vehiculos \n Fecha: " + d,
                        customize: function (doc) {
                            /*                            doc.content[1].margin = [80, 0, 80, 0];*/
                            doc['footer'] = (function (page, pages) {
                                return {
                                    columns: [
                                        {
                                            alignment: 'left',
                                            text:
                                                [
                                                    { text: 'Usuario: ' + Usuario, italics: true }
                                                ]
                                        },
                                        {
                                            alignment: 'right',
                                            text: [
                                                'Pagina',
                                                { text: page.toString(), talics: true },
                                                'de',
                                                { text: page.toString(), talics: true },
                                            ]
                                        }
                                    ],
                                    margin: [10, 0]
                                }
                            });

                        },
                        exportOptions: {
                            columns: [0, 1, 2, 3, 4, 5, 6, 7]
                        }
                    }
                ]
            });
        });
    </script>
}