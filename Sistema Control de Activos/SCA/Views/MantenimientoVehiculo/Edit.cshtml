@model SCA.Models.MantenimientoVehiculo

@{
    ViewBag.Title = "Edit";
}
@Html.Raw(TempData["msg"])
<h2>Editar</h2>


@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h4>Mantenimiento de vehiculo</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.LabelFor(model => model.IdMantenimientoVehiculo, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.IdMantenimientoVehiculo, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
                @Html.ValidationMessageFor(model => model.IdMantenimientoVehiculo, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <label class="control-label col-md-2">Placa:</label>
            <div class="col-md-10">
                @Html.DropDownList("IdFlotilla", (List<SelectListItem>)ViewBag.IdFlotilla, htmlAttributes: new { @class = "form-control" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.TipoMantenimiento, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <select name="TipoMantenimiento" class="form-control">
                    <option value="0">Preventivo</option>
                    <option value="1" @if (Model.TipoMantenimiento > 0) { @Html.Raw("selected") }>Correctivo</option>
                </select>
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.KilometrajeActual, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.KilometrajeActual, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.KilometrajeActual, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.ProximoKilometraje, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.ProximoKilometraje, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.ProximoKilometraje, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.CostoMantenimiento, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.CostoMantenimiento, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.CostoMantenimiento, "", new { @class = "text-danger" })
            </div>
        </div>
        @{
            var FechaMantenimiento = DateTime.Now;
            if (Model.FechaMantenimiento.HasValue)
            {
                FechaMantenimiento = (DateTime)Model.FechaMantenimiento;
            }
        }
        <div class="form-group">
            @Html.LabelFor(model => model.FechaMantenimiento, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <input type="date" class="form-control" value="@FechaMantenimiento.ToString("yyyy-MM-dd")" name="FechaMantenimiento" required />
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.DescripcionServicio, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.DescripcionServicio, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.DescripcionServicio, "", new { @class = "text-danger" })
            </div>
        </div>
        <br />
        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Editar" class="btn btn-outline-secondary" />
            </div>
        </div>
        <br />
    </div>
}

<div>
    @Html.ActionLink("Volver a la lista", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
