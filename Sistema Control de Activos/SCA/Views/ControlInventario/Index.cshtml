@model IEnumerable<SCA.Models.ControlInventario>

@{
    ViewBag.Title = "Index";
    Layout = "~/Views/Shared/_Layout.cshtml";
}
@Html.Raw(TempData["msg"])
<h2>Control de inventario</h2>

<p>
    @Html.ActionLink("Agregar Nuevo", "Create")
</p>
<br />
<div class="row">
    <form method="get" class="col-3">
        <div class="form-group">
            <label class="control-label col-md-10">Codigo D'geo:</label>
            <div class="col-md-10">
                <input type="text" name="Codigo" value="@Request.QueryString["Codigo"]" required />
            </div>
        </div>
        <br />
        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Buscar" class="btn btn-outline-secondary" />
            </div>
        </div>
    </form>
    <form class="col-3">
        <div class="form-group">
            <label class="control-label col-md-5">Colaborador:</label>
            <div class="col-md-10">
                <input type="text" name="Colaborador" value="@Request.QueryString["Colaborador"]" required />
            </div>
        </div>
        <br />
        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Buscar" class="btn btn-outline-secondary" />
            </div>
        </div>
    </form>
    <form method="get" class="col-3">
        <div class="form-group">
            <label class="control-label col-md-10">Departamento:</label>
            <div class="col-md-10">
                @Html.DropDownList("IdDepartamento", (List<SelectListItem>)ViewBag.IdDepartamento, htmlAttributes: new { @class = "form-control", @required = "required" })
            </div>
        </div>
        <br />
        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Buscar" class="btn btn-outline-secondary" />
            </div>
        </div>
    </form>
    <form method="get" class="col-3">
        <div class="form-group">
            <label class="control-label col-md-10">Estado del activo:</label>
            <div class="col-md-10">
                <select name="Estado" class="form-control">
                    <option value="0">Bueno</option>
                    <option value="1">Malo</option>
                </select>
            </div>
        </div>
        <br />
        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Buscar" class="btn btn-outline-secondary" />
            </div>
        </div>
    </form>
    <form method="get" class="col-8">
        <div class="form-group">
            <div class="col-md-10 row">
                <div class="col-4">
                    <label class="control-label col-md-10">Fecha inicial:</label>
                    <input type="date" name="FechaIni" value="@Request.QueryString["FechaIni"]" required />
                </div>
                <div class="col-4">
                    <label class="control-label col-md-10">Fecha Final:</label>
                    <input type="date" name="FechaFin" value="@Request.QueryString["FechaFin"]" required />
                </div>
            </div>
        </div>
        <br />
        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Buscar" class="btn btn-outline-secondary" />
            </div>
        </div>
    </form>
    <br />
    <form class="">
        <br />
        <button class="btn btn-outline-secondary" type="submit">Limpiar</button>
    </form>
</div>
<br />
<table class="table table-bordered table-responsive" id="Tabla">
    <thead>
        <tr>
            <th>
                Id de control de inventario
            </th>
            <th>
                Nombre inventario
            </th>
            <th>
                Nombre de la persona
            </th>
            <th>
                @Html.DisplayNameFor(model => model.EstadoActivo)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.FechaSalida)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.FechaIngresa)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Anomalias)
            </th>
            <th>Acciones</th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model)
        {
            <tr>
                <td>
                    @Html.DisplayFor(modelItem => item.IdControlInventario)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Inventario.Nombre)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Personal.Nombre)
                </td>
                <td>
                    @if (item.EstadoActivo > 0)
                    {
                        @Html.Raw("Malo");
                    }
                    else
                    {
                        @Html.Raw("Bueno");
                    }
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.FechaSalida)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.FechaIngresa)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Anomalias)
                </td>
                <td>
                    @Html.ActionLink("Editar", "Edit", new { id = item.IdControlInventario }) |
                    @Html.ActionLink("Detalles", "Details", new { id = item.IdControlInventario }) |
                    @Html.ActionLink("Eliminar", "Delete", new { id = item.IdControlInventario })
                </td>
            </tr>
        }
    </tbody>
</table>
@section scripts{
    @*@Scripts.Render("~/bundles/jqueryval")*@
    <script>
        var Usuario = '@Session["Usuario"].ToString()';//agarra el valor del usuario logueado
        var f = new Date();
        var d = f.getDate() + "/" + (f.getMonth() + 1).toString() + "/" + f.getFullYear() + "   " + " hora: " + f.getHours() + ":" + f.getMinutes();
        $(document).ready(function () {
            $('#Tabla').DataTable({
                "searching": true,
                "lengthChange": false,
                dom: 'Bfrtip',
                //"scrollX": true,
                //"scrollY": true,
                language: {
                    sLengthMenu: "_MENU_",
                    decimal: "",
                    emptyTable: "No hay información",
                    info: "Mostrando _START_ a _END_ de _TOTAL_",
                    infoEmpty: "Mostrando 0 de 0",
                    infoPostFix: "",
                    search: "Buscar",
                    thousands: ",",
                    loadingRecords: "Cargando...",
                    processing: "<div class='lds-dual-ring'></div>",
                    zeroRecords: "No se encontraron resultados",
                    paginate: {
                        "first": "Primero",
                        "last": "Último",
                        "next": "Siguiente",
                        "previous": "Anterior"
                    },
                }, buttons: [
                    {
                        extend: 'pdf',
                        orientation: 'landscape',
                        text: '<button class="btn btn-outline-secondary"> Exportar a PDF</button>',
                        filename: 'Reporte de control de inventarios',
                        title: "D'geo \n Reporte de control de inventarios \n Fecha: " + d,
                        customize: function (doc) {
                            doc.content[1].margin = [150, 0, 150, 0];
                            doc['footer'] = (function (page, pages) {
                                return {
                                    columns: [
                                        {
                                            alignment: 'left',
                                            text:
                                                [
                                                    { text: 'Usuario: ' + Usuario, italics: true }
                                                ]
                                        },
                                        {
                                            alignment: 'right',
                                            text: [
                                                'Pagina ',
                                                { text: page.toString(), talics: true },
                                                ' de ',
                                                { text: page.toString(), talics: true },
                                            ]
                                        }
                                    ],
                                    margin: [10, 0]
                                }
                            });

                        },
                        exportOptions: {
                            columns: [0, 1, 2, 3, 4,5,6]
                        }
                    }
                ]
            });
        });
    </script>
}