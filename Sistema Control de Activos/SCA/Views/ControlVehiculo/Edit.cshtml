@model SCA.Models.ControlVehiculoViewModel

@{
    ViewBag.Title = "Edit";
}
@Html.Raw(TempData["msg"])
<h2>Editar</h2>


@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h4>Control de vehículo</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.LabelFor(model => model.IdControlVehiculo, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.IdControlVehiculo, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
                @Html.ValidationMessageFor(model => model.IdControlVehiculo, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.IdFlotilla, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("IdFlotilla", (List<SelectListItem>)ViewBag.IdFlotilla, htmlAttributes: new { @class = "form-control" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.IdPersonal, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("IdPersonal", (List<SelectListItem>)ViewBag.IdPersonallist, htmlAttributes: new { @class = "form-control" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.EstadoVehiculo, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <select name="EstadoVehiculo" class="form-control">
                    <option value="0">Bueno</option>
                    <option value="1" @if (Model.EstadoVehiculo > 0) { @Html.Raw("selected") }>Malo</option>
                </select>
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.FechaSalida, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <input type="date" class="form-control" value="@Model.FechaSalida.ToString("yyyy-MM-dd")" name="FechaSalida" required />
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.KilometrajeSalida, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.KilometrajeSalida, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.KilometrajeSalida, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.FechaIngresa, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <input type="date" class="form-control" value="@Model.FechaIngresa.ToString("yyyy-MM-dd")" name="FechaIngresa" required />
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.KilometrajeIngresa, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.KilometrajeIngresa, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.KilometrajeIngresa, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Anomalias, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Anomalias, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Anomalias, "", new { @class = "text-danger" })
            </div>
        </div>
        <br />
        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Editar" class="btn btn-outline-secondary" />
            </div>
        </div>
        <br />
    </div>
}

<div>
    @Html.ActionLink("Volver a la lista", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
